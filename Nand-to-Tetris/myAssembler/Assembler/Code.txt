package Assembler;

import java.util.Hashtable;

public class Code
{
    static String dest(final String mnemonic) {
        String output = "";
        if (mnemonic.contains("A")) {
            ++output;
        }
        else {
            output += 0;
        }
        if (mnemonic.contains("D")) {
            ++output;
        }
        else {
            output += 0;
        }
        if (mnemonic.contains("M")) {
            ++output;
        }
        else {
            output += 0;
        }
        return output;
    }
    
    static String jump(final String mnemonic) {
        final Hashtable<String, String> jumpTable = new Hashtable<String, String>();
        jumpTable.put("", "000");
        jumpTable.put("JGT", "001");
        jumpTable.put("JEQ", "010");
        jumpTable.put("JGE", "011");
        jumpTable.put("JLT", "100");
        jumpTable.put("JNE", "101");
        jumpTable.put("JLE", "110");
        jumpTable.put("JMP", "111");
        return jumpTable.get(mnemonic);
    }
    
    static String comp(final String mnemonic) {
        final Hashtable<String, String> compTable = new Hashtable<String, String>();
        String output;
        if (mnemonic.contains("M")) {
            output = "1";
        }
        else {
            output = "0";
        }
        compTable.put("0", "101010");
        compTable.put("1", "111111");
        compTable.put("-1", "111010");
        compTable.put("D", "001100");
        compTable.put("A", "110000");
        compTable.put("M", "110000");
        compTable.put("!D", "001101");
        compTable.put("!A", "110001");
        compTable.put("!M", "110001");
        compTable.put("-D", "001111");
        compTable.put("-A", "110011");
        compTable.put("-M", "110011");
        compTable.put("D+1", "011111");
        compTable.put("A+1", "110111");
        compTable.put("M+1", "110111");
        compTable.put("D-1", "001110");
        compTable.put("A-1", "110010");
        compTable.put("M-1", "110010");
        compTable.put("D+A", "000010");
        compTable.put("D+M", "000010");
        compTable.put("D-A", "010011");
        compTable.put("D-M", "010011");
        compTable.put("A-D", "000111");
        compTable.put("M-D", "000111");
        compTable.put("D&A", "000000");
        compTable.put("D&M", "000000");
        compTable.put("D|A", "010101");
        compTable.put("D|M", "010101");
        output += compTable.get(mnemonic);
        return output;
    }
}